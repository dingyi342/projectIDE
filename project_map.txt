Function
    1) projectIDE-create(projectType &key templateDir defaultDir document include exclude hook)
       - copy template
       - call projectIDE-signature-generator
       - call projectIDE-DATABASE-controller(signature 'new path name)
       - call projectIDE-add-running-project(signature)

   2) projectIDE-signature-generator(file)
   - check if signature exist
     - if exists, search DATABASE for signature
          - if find, ask create new signature or use old signature
            - if create new signature
              - generate new signature
            - if use old signature
              - do nothing
   - return signature

   3) projectIDE-DATABASE-controller(file signature flag= 'new 'read 'modify)
   - if 'new
     - check signature
       - create or update signature
       - update create time
       - update path
       - update name
     - write to DATABASE file

     
                  
              
Variable
    1)

Key
    1) signature
       - most important
       - work as ID
       - create by projectIDE-signature-generator
       

File
    1) .projectIDE
       - under each project root
       - user defined rules
       - most important is signature
         - variable
           - signature
           - name
           - include
           - exclude
           - inject
    2) DATABASE
       - under ~/.emacs.d/projectIDE/
       - master record of all projects
         - variable
            - signature
            - name
            - path
            - creation
    3) record
       - under ~/.emacs.d/projectIDE/record
       - signature as filename
         - variable
           - name
           - path
           - include
           - include_file_list
           - exclude
           - exclude_file_list
           - hook
           - inject
           

Runtime
    1) DATABASE
    - read form DATABASE at very beginning

    2) projectIDE-running-project
    

Flow
